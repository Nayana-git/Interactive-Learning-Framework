@model RoleViewModel
@{     
    ViewData.AddActivePage(ManageNavPages.Role);
}
<div class="card">
    <div class="card-header">
        Create Role
    </div>

    <form method="post" asp-controller="Role" asp-action="Create" asp-antiforgery="true" class="form-horizontal">
        <div class="card-body">
            <div class="text-danger" asp-validation-summary="ModelOnly"></div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="RoleName">Role Name</label>
                    <input class="form-control" asp-for="Name" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group col-md-6">
                    <label for="Description">Description</label>
                    <input class="form-control" asp-for="Description">
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <button type="submit" class="btn btn-primary">Create</button>
            <button type="reset" class="btn btn-primary">Reset</button>
            <a class="btn btn-primary" asp-controller="Role" asp-action="Index">Cancel</a>
        </div>
    </form>

</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
